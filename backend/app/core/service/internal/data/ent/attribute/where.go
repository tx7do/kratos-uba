// Code generated by ent, DO NOT EDIT.

package attribute

import (
	"kratos-uba/app/core/service/internal/data/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id uint32) predicate.Attribute {
	return predicate.Attribute(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint32) predicate.Attribute {
	return predicate.Attribute(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint32) predicate.Attribute {
	return predicate.Attribute(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint32) predicate.Attribute {
	return predicate.Attribute(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint32) predicate.Attribute {
	return predicate.Attribute(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint32) predicate.Attribute {
	return predicate.Attribute(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint32) predicate.Attribute {
	return predicate.Attribute(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint32) predicate.Attribute {
	return predicate.Attribute(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint32) predicate.Attribute {
	return predicate.Attribute(sql.FieldLTE(FieldID, id))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.Attribute {
	return predicate.Attribute(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.Attribute {
	return predicate.Attribute(sql.FieldEQ(FieldUpdateTime, v))
}

// DeleteTime applies equality check predicate on the "delete_time" field. It's identical to DeleteTimeEQ.
func DeleteTime(v time.Time) predicate.Attribute {
	return predicate.Attribute(sql.FieldEQ(FieldDeleteTime, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldEQ(FieldName, v))
}

// ShowName applies equality check predicate on the "show_name" field. It's identical to ShowNameEQ.
func ShowName(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldEQ(FieldShowName, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldEQ(FieldStatus, v))
}

// AttributeType applies equality check predicate on the "attribute_type" field. It's identical to AttributeTypeEQ.
func AttributeType(v uint8) predicate.Attribute {
	return predicate.Attribute(sql.FieldEQ(FieldAttributeType, v))
}

// AttributeSource applies equality check predicate on the "attribute_source" field. It's identical to AttributeSourceEQ.
func AttributeSource(v uint8) predicate.Attribute {
	return predicate.Attribute(sql.FieldEQ(FieldAttributeSource, v))
}

// AppID applies equality check predicate on the "app_id" field. It's identical to AppIDEQ.
func AppID(v uint32) predicate.Attribute {
	return predicate.Attribute(sql.FieldEQ(FieldAppID, v))
}

// DataType applies equality check predicate on the "data_type" field. It's identical to DataTypeEQ.
func DataType(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldEQ(FieldDataType, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.Attribute {
	return predicate.Attribute(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.Attribute {
	return predicate.Attribute(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.Attribute {
	return predicate.Attribute(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.Attribute {
	return predicate.Attribute(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.Attribute {
	return predicate.Attribute(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.Attribute {
	return predicate.Attribute(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.Attribute {
	return predicate.Attribute(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.Attribute {
	return predicate.Attribute(sql.FieldLTE(FieldCreateTime, v))
}

// CreateTimeIsNil applies the IsNil predicate on the "create_time" field.
func CreateTimeIsNil() predicate.Attribute {
	return predicate.Attribute(sql.FieldIsNull(FieldCreateTime))
}

// CreateTimeNotNil applies the NotNil predicate on the "create_time" field.
func CreateTimeNotNil() predicate.Attribute {
	return predicate.Attribute(sql.FieldNotNull(FieldCreateTime))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.Attribute {
	return predicate.Attribute(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.Attribute {
	return predicate.Attribute(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.Attribute {
	return predicate.Attribute(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.Attribute {
	return predicate.Attribute(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.Attribute {
	return predicate.Attribute(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.Attribute {
	return predicate.Attribute(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.Attribute {
	return predicate.Attribute(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.Attribute {
	return predicate.Attribute(sql.FieldLTE(FieldUpdateTime, v))
}

// UpdateTimeIsNil applies the IsNil predicate on the "update_time" field.
func UpdateTimeIsNil() predicate.Attribute {
	return predicate.Attribute(sql.FieldIsNull(FieldUpdateTime))
}

// UpdateTimeNotNil applies the NotNil predicate on the "update_time" field.
func UpdateTimeNotNil() predicate.Attribute {
	return predicate.Attribute(sql.FieldNotNull(FieldUpdateTime))
}

// DeleteTimeEQ applies the EQ predicate on the "delete_time" field.
func DeleteTimeEQ(v time.Time) predicate.Attribute {
	return predicate.Attribute(sql.FieldEQ(FieldDeleteTime, v))
}

// DeleteTimeNEQ applies the NEQ predicate on the "delete_time" field.
func DeleteTimeNEQ(v time.Time) predicate.Attribute {
	return predicate.Attribute(sql.FieldNEQ(FieldDeleteTime, v))
}

// DeleteTimeIn applies the In predicate on the "delete_time" field.
func DeleteTimeIn(vs ...time.Time) predicate.Attribute {
	return predicate.Attribute(sql.FieldIn(FieldDeleteTime, vs...))
}

// DeleteTimeNotIn applies the NotIn predicate on the "delete_time" field.
func DeleteTimeNotIn(vs ...time.Time) predicate.Attribute {
	return predicate.Attribute(sql.FieldNotIn(FieldDeleteTime, vs...))
}

// DeleteTimeGT applies the GT predicate on the "delete_time" field.
func DeleteTimeGT(v time.Time) predicate.Attribute {
	return predicate.Attribute(sql.FieldGT(FieldDeleteTime, v))
}

// DeleteTimeGTE applies the GTE predicate on the "delete_time" field.
func DeleteTimeGTE(v time.Time) predicate.Attribute {
	return predicate.Attribute(sql.FieldGTE(FieldDeleteTime, v))
}

// DeleteTimeLT applies the LT predicate on the "delete_time" field.
func DeleteTimeLT(v time.Time) predicate.Attribute {
	return predicate.Attribute(sql.FieldLT(FieldDeleteTime, v))
}

// DeleteTimeLTE applies the LTE predicate on the "delete_time" field.
func DeleteTimeLTE(v time.Time) predicate.Attribute {
	return predicate.Attribute(sql.FieldLTE(FieldDeleteTime, v))
}

// DeleteTimeIsNil applies the IsNil predicate on the "delete_time" field.
func DeleteTimeIsNil() predicate.Attribute {
	return predicate.Attribute(sql.FieldIsNull(FieldDeleteTime))
}

// DeleteTimeNotNil applies the NotNil predicate on the "delete_time" field.
func DeleteTimeNotNil() predicate.Attribute {
	return predicate.Attribute(sql.FieldNotNull(FieldDeleteTime))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.Attribute {
	return predicate.Attribute(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.Attribute {
	return predicate.Attribute(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldHasSuffix(FieldName, v))
}

// NameIsNil applies the IsNil predicate on the "name" field.
func NameIsNil() predicate.Attribute {
	return predicate.Attribute(sql.FieldIsNull(FieldName))
}

// NameNotNil applies the NotNil predicate on the "name" field.
func NameNotNil() predicate.Attribute {
	return predicate.Attribute(sql.FieldNotNull(FieldName))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldContainsFold(FieldName, v))
}

// ShowNameEQ applies the EQ predicate on the "show_name" field.
func ShowNameEQ(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldEQ(FieldShowName, v))
}

// ShowNameNEQ applies the NEQ predicate on the "show_name" field.
func ShowNameNEQ(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldNEQ(FieldShowName, v))
}

// ShowNameIn applies the In predicate on the "show_name" field.
func ShowNameIn(vs ...string) predicate.Attribute {
	return predicate.Attribute(sql.FieldIn(FieldShowName, vs...))
}

// ShowNameNotIn applies the NotIn predicate on the "show_name" field.
func ShowNameNotIn(vs ...string) predicate.Attribute {
	return predicate.Attribute(sql.FieldNotIn(FieldShowName, vs...))
}

// ShowNameGT applies the GT predicate on the "show_name" field.
func ShowNameGT(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldGT(FieldShowName, v))
}

// ShowNameGTE applies the GTE predicate on the "show_name" field.
func ShowNameGTE(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldGTE(FieldShowName, v))
}

// ShowNameLT applies the LT predicate on the "show_name" field.
func ShowNameLT(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldLT(FieldShowName, v))
}

// ShowNameLTE applies the LTE predicate on the "show_name" field.
func ShowNameLTE(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldLTE(FieldShowName, v))
}

// ShowNameContains applies the Contains predicate on the "show_name" field.
func ShowNameContains(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldContains(FieldShowName, v))
}

// ShowNameHasPrefix applies the HasPrefix predicate on the "show_name" field.
func ShowNameHasPrefix(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldHasPrefix(FieldShowName, v))
}

// ShowNameHasSuffix applies the HasSuffix predicate on the "show_name" field.
func ShowNameHasSuffix(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldHasSuffix(FieldShowName, v))
}

// ShowNameIsNil applies the IsNil predicate on the "show_name" field.
func ShowNameIsNil() predicate.Attribute {
	return predicate.Attribute(sql.FieldIsNull(FieldShowName))
}

// ShowNameNotNil applies the NotNil predicate on the "show_name" field.
func ShowNameNotNil() predicate.Attribute {
	return predicate.Attribute(sql.FieldNotNull(FieldShowName))
}

// ShowNameEqualFold applies the EqualFold predicate on the "show_name" field.
func ShowNameEqualFold(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldEqualFold(FieldShowName, v))
}

// ShowNameContainsFold applies the ContainsFold predicate on the "show_name" field.
func ShowNameContainsFold(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldContainsFold(FieldShowName, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...string) predicate.Attribute {
	return predicate.Attribute(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...string) predicate.Attribute {
	return predicate.Attribute(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldLTE(FieldStatus, v))
}

// StatusContains applies the Contains predicate on the "status" field.
func StatusContains(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldContains(FieldStatus, v))
}

// StatusHasPrefix applies the HasPrefix predicate on the "status" field.
func StatusHasPrefix(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldHasPrefix(FieldStatus, v))
}

// StatusHasSuffix applies the HasSuffix predicate on the "status" field.
func StatusHasSuffix(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldHasSuffix(FieldStatus, v))
}

// StatusIsNil applies the IsNil predicate on the "status" field.
func StatusIsNil() predicate.Attribute {
	return predicate.Attribute(sql.FieldIsNull(FieldStatus))
}

// StatusNotNil applies the NotNil predicate on the "status" field.
func StatusNotNil() predicate.Attribute {
	return predicate.Attribute(sql.FieldNotNull(FieldStatus))
}

// StatusEqualFold applies the EqualFold predicate on the "status" field.
func StatusEqualFold(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldEqualFold(FieldStatus, v))
}

// StatusContainsFold applies the ContainsFold predicate on the "status" field.
func StatusContainsFold(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldContainsFold(FieldStatus, v))
}

// AttributeTypeEQ applies the EQ predicate on the "attribute_type" field.
func AttributeTypeEQ(v uint8) predicate.Attribute {
	return predicate.Attribute(sql.FieldEQ(FieldAttributeType, v))
}

// AttributeTypeNEQ applies the NEQ predicate on the "attribute_type" field.
func AttributeTypeNEQ(v uint8) predicate.Attribute {
	return predicate.Attribute(sql.FieldNEQ(FieldAttributeType, v))
}

// AttributeTypeIn applies the In predicate on the "attribute_type" field.
func AttributeTypeIn(vs ...uint8) predicate.Attribute {
	return predicate.Attribute(sql.FieldIn(FieldAttributeType, vs...))
}

// AttributeTypeNotIn applies the NotIn predicate on the "attribute_type" field.
func AttributeTypeNotIn(vs ...uint8) predicate.Attribute {
	return predicate.Attribute(sql.FieldNotIn(FieldAttributeType, vs...))
}

// AttributeTypeGT applies the GT predicate on the "attribute_type" field.
func AttributeTypeGT(v uint8) predicate.Attribute {
	return predicate.Attribute(sql.FieldGT(FieldAttributeType, v))
}

// AttributeTypeGTE applies the GTE predicate on the "attribute_type" field.
func AttributeTypeGTE(v uint8) predicate.Attribute {
	return predicate.Attribute(sql.FieldGTE(FieldAttributeType, v))
}

// AttributeTypeLT applies the LT predicate on the "attribute_type" field.
func AttributeTypeLT(v uint8) predicate.Attribute {
	return predicate.Attribute(sql.FieldLT(FieldAttributeType, v))
}

// AttributeTypeLTE applies the LTE predicate on the "attribute_type" field.
func AttributeTypeLTE(v uint8) predicate.Attribute {
	return predicate.Attribute(sql.FieldLTE(FieldAttributeType, v))
}

// AttributeTypeIsNil applies the IsNil predicate on the "attribute_type" field.
func AttributeTypeIsNil() predicate.Attribute {
	return predicate.Attribute(sql.FieldIsNull(FieldAttributeType))
}

// AttributeTypeNotNil applies the NotNil predicate on the "attribute_type" field.
func AttributeTypeNotNil() predicate.Attribute {
	return predicate.Attribute(sql.FieldNotNull(FieldAttributeType))
}

// AttributeSourceEQ applies the EQ predicate on the "attribute_source" field.
func AttributeSourceEQ(v uint8) predicate.Attribute {
	return predicate.Attribute(sql.FieldEQ(FieldAttributeSource, v))
}

// AttributeSourceNEQ applies the NEQ predicate on the "attribute_source" field.
func AttributeSourceNEQ(v uint8) predicate.Attribute {
	return predicate.Attribute(sql.FieldNEQ(FieldAttributeSource, v))
}

// AttributeSourceIn applies the In predicate on the "attribute_source" field.
func AttributeSourceIn(vs ...uint8) predicate.Attribute {
	return predicate.Attribute(sql.FieldIn(FieldAttributeSource, vs...))
}

// AttributeSourceNotIn applies the NotIn predicate on the "attribute_source" field.
func AttributeSourceNotIn(vs ...uint8) predicate.Attribute {
	return predicate.Attribute(sql.FieldNotIn(FieldAttributeSource, vs...))
}

// AttributeSourceGT applies the GT predicate on the "attribute_source" field.
func AttributeSourceGT(v uint8) predicate.Attribute {
	return predicate.Attribute(sql.FieldGT(FieldAttributeSource, v))
}

// AttributeSourceGTE applies the GTE predicate on the "attribute_source" field.
func AttributeSourceGTE(v uint8) predicate.Attribute {
	return predicate.Attribute(sql.FieldGTE(FieldAttributeSource, v))
}

// AttributeSourceLT applies the LT predicate on the "attribute_source" field.
func AttributeSourceLT(v uint8) predicate.Attribute {
	return predicate.Attribute(sql.FieldLT(FieldAttributeSource, v))
}

// AttributeSourceLTE applies the LTE predicate on the "attribute_source" field.
func AttributeSourceLTE(v uint8) predicate.Attribute {
	return predicate.Attribute(sql.FieldLTE(FieldAttributeSource, v))
}

// AttributeSourceIsNil applies the IsNil predicate on the "attribute_source" field.
func AttributeSourceIsNil() predicate.Attribute {
	return predicate.Attribute(sql.FieldIsNull(FieldAttributeSource))
}

// AttributeSourceNotNil applies the NotNil predicate on the "attribute_source" field.
func AttributeSourceNotNil() predicate.Attribute {
	return predicate.Attribute(sql.FieldNotNull(FieldAttributeSource))
}

// AppIDEQ applies the EQ predicate on the "app_id" field.
func AppIDEQ(v uint32) predicate.Attribute {
	return predicate.Attribute(sql.FieldEQ(FieldAppID, v))
}

// AppIDNEQ applies the NEQ predicate on the "app_id" field.
func AppIDNEQ(v uint32) predicate.Attribute {
	return predicate.Attribute(sql.FieldNEQ(FieldAppID, v))
}

// AppIDIn applies the In predicate on the "app_id" field.
func AppIDIn(vs ...uint32) predicate.Attribute {
	return predicate.Attribute(sql.FieldIn(FieldAppID, vs...))
}

// AppIDNotIn applies the NotIn predicate on the "app_id" field.
func AppIDNotIn(vs ...uint32) predicate.Attribute {
	return predicate.Attribute(sql.FieldNotIn(FieldAppID, vs...))
}

// AppIDGT applies the GT predicate on the "app_id" field.
func AppIDGT(v uint32) predicate.Attribute {
	return predicate.Attribute(sql.FieldGT(FieldAppID, v))
}

// AppIDGTE applies the GTE predicate on the "app_id" field.
func AppIDGTE(v uint32) predicate.Attribute {
	return predicate.Attribute(sql.FieldGTE(FieldAppID, v))
}

// AppIDLT applies the LT predicate on the "app_id" field.
func AppIDLT(v uint32) predicate.Attribute {
	return predicate.Attribute(sql.FieldLT(FieldAppID, v))
}

// AppIDLTE applies the LTE predicate on the "app_id" field.
func AppIDLTE(v uint32) predicate.Attribute {
	return predicate.Attribute(sql.FieldLTE(FieldAppID, v))
}

// AppIDIsNil applies the IsNil predicate on the "app_id" field.
func AppIDIsNil() predicate.Attribute {
	return predicate.Attribute(sql.FieldIsNull(FieldAppID))
}

// AppIDNotNil applies the NotNil predicate on the "app_id" field.
func AppIDNotNil() predicate.Attribute {
	return predicate.Attribute(sql.FieldNotNull(FieldAppID))
}

// DataTypeEQ applies the EQ predicate on the "data_type" field.
func DataTypeEQ(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldEQ(FieldDataType, v))
}

// DataTypeNEQ applies the NEQ predicate on the "data_type" field.
func DataTypeNEQ(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldNEQ(FieldDataType, v))
}

// DataTypeIn applies the In predicate on the "data_type" field.
func DataTypeIn(vs ...string) predicate.Attribute {
	return predicate.Attribute(sql.FieldIn(FieldDataType, vs...))
}

// DataTypeNotIn applies the NotIn predicate on the "data_type" field.
func DataTypeNotIn(vs ...string) predicate.Attribute {
	return predicate.Attribute(sql.FieldNotIn(FieldDataType, vs...))
}

// DataTypeGT applies the GT predicate on the "data_type" field.
func DataTypeGT(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldGT(FieldDataType, v))
}

// DataTypeGTE applies the GTE predicate on the "data_type" field.
func DataTypeGTE(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldGTE(FieldDataType, v))
}

// DataTypeLT applies the LT predicate on the "data_type" field.
func DataTypeLT(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldLT(FieldDataType, v))
}

// DataTypeLTE applies the LTE predicate on the "data_type" field.
func DataTypeLTE(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldLTE(FieldDataType, v))
}

// DataTypeContains applies the Contains predicate on the "data_type" field.
func DataTypeContains(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldContains(FieldDataType, v))
}

// DataTypeHasPrefix applies the HasPrefix predicate on the "data_type" field.
func DataTypeHasPrefix(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldHasPrefix(FieldDataType, v))
}

// DataTypeHasSuffix applies the HasSuffix predicate on the "data_type" field.
func DataTypeHasSuffix(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldHasSuffix(FieldDataType, v))
}

// DataTypeIsNil applies the IsNil predicate on the "data_type" field.
func DataTypeIsNil() predicate.Attribute {
	return predicate.Attribute(sql.FieldIsNull(FieldDataType))
}

// DataTypeNotNil applies the NotNil predicate on the "data_type" field.
func DataTypeNotNil() predicate.Attribute {
	return predicate.Attribute(sql.FieldNotNull(FieldDataType))
}

// DataTypeEqualFold applies the EqualFold predicate on the "data_type" field.
func DataTypeEqualFold(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldEqualFold(FieldDataType, v))
}

// DataTypeContainsFold applies the ContainsFold predicate on the "data_type" field.
func DataTypeContainsFold(v string) predicate.Attribute {
	return predicate.Attribute(sql.FieldContainsFold(FieldDataType, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Attribute) predicate.Attribute {
	return predicate.Attribute(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Attribute) predicate.Attribute {
	return predicate.Attribute(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Attribute) predicate.Attribute {
	return predicate.Attribute(sql.NotPredicates(p))
}
