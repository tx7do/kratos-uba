# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: 用户管理接口
    description: 用户管理
    version: "1.0"
paths:
    /admin/v1/apps:
        get:
            tags:
                - ApplicationService
            description: 获取应用列表
            operationId: ApplicationService_ListApplication
            parameters:
                - name: page
                  in: query
                  description: 当前页码
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  description: 每页的行数
                  schema:
                    type: integer
                    format: int32
                - name: query
                  in: query
                  description: 与过滤参数
                  schema:
                    type: string
                - name: or
                  in: query
                  description: 或过滤参数
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: 排序条件
                  schema:
                    type: array
                    items:
                        type: string
                - name: nopaging
                  in: query
                  description: 是否不分页
                  schema:
                    type: boolean
                - name: field_mask
                  in: query
                  description: 字段掩码
                  schema:
                    type: string
                    format: field-mask
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListApplicationResponse'
            security:
                - OAuth2PasswordBearer: []
        post:
            tags:
                - ApplicationService
            description: 创建应用
            operationId: ApplicationService_CreateApplication
            parameters:
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Application'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Application'
            security:
                - OAuth2PasswordBearer: []
    /admin/v1/apps/{id}:
        get:
            tags:
                - ApplicationService
            description: 获取应用数据
            operationId: ApplicationService_GetApplication
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Application'
            security:
                - OAuth2PasswordBearer: []
        put:
            tags:
                - ApplicationService
            description: 更新应用
            operationId: ApplicationService_UpdateApplication
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Application'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Application'
            security:
                - OAuth2PasswordBearer: []
        delete:
            tags:
                - ApplicationService
            description: 删除应用
            operationId: ApplicationService_DeleteApplication
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content: {}
            security:
                - OAuth2PasswordBearer: []
    /admin/v1/login:
        post:
            tags:
                - AuthenticationService
            description: 后台登陆
            operationId: AuthenticationService_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginResponse'
    /admin/v1/logout:
        post:
            tags:
                - AuthenticationService
            description: 后台登出
            operationId: AuthenticationService_Logout
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LogoutRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
            security:
                - OAuth2PasswordBearer: []
    /admin/v1/me:
        get:
            tags:
                - AuthenticationService
            description: 后台获取已经登陆的用户的数据
            operationId: AuthenticationService_GetMe
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
            security:
                - OAuth2PasswordBearer: []
    /admin/v1/users:
        get:
            tags:
                - UserService
            description: 获取用户列表
            operationId: UserService_ListUser
            parameters:
                - name: page
                  in: query
                  description: 当前页码
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  description: 每页的行数
                  schema:
                    type: integer
                    format: int32
                - name: query
                  in: query
                  description: 与过滤参数
                  schema:
                    type: string
                - name: or
                  in: query
                  description: 或过滤参数
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: 排序条件
                  schema:
                    type: array
                    items:
                        type: string
                - name: nopaging
                  in: query
                  description: 是否不分页
                  schema:
                    type: boolean
                - name: field_mask
                  in: query
                  description: 字段掩码
                  schema:
                    type: string
                    format: field-mask
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUserResponse'
            security:
                - OAuth2PasswordBearer: []
        post:
            tags:
                - UserService
            description: 创建用户
            operationId: UserService_CreateUser
            parameters:
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
            security:
                - OAuth2PasswordBearer: []
    /admin/v1/users/{id}:
        get:
            tags:
                - UserService
            description: 获取用户数据
            operationId: UserService_GetUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
            security:
                - OAuth2PasswordBearer: []
        put:
            tags:
                - UserService
            description: 更新用户
            operationId: UserService_UpdateUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
            security:
                - OAuth2PasswordBearer: []
        delete:
            tags:
                - UserService
            description: 删除用户
            operationId: UserService_DeleteUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content: {}
            security:
                - OAuth2PasswordBearer: []
components:
    schemas:
        Application:
            type: object
            properties:
                id:
                    type: integer
                    description: ID
                    format: uint32
                name:
                    type: string
                    description: 应用名称
                appId:
                    type: string
                    description: 应用ID
                appKey:
                    type: string
                    description: 应用密钥
                status:
                    enum:
                        - ON
                        - OFF
                    type: string
                    default: ON
                    description: 应用状态
                creatorId:
                    type: integer
                    description: 创建者ID
                    format: uint32
                ownerId:
                    type: integer
                    description: 拥有者ID
                    format: uint32
                remark:
                    type: string
                    description: 个人描述
                keepMonth:
                    type: integer
                    description: 数据保存多少个月
                    format: uint32
                createTime:
                    type: string
                    format: date-time
                updateTime:
                    type: string
                    format: date-time
                deleteTime:
                    type: string
                    format: date-time
            description: 应用
        KratosStatus:
            type: object
            properties:
                code:
                    type: number
                    description: 错误码
                    format: int32
                message:
                    type: string
                    description: 错误消息
                reason:
                    type: string
                    description: 错误原因
                metadata:
                    type: object
                    description: 元数据
            description: Kratos错误返回
        ListApplicationResponse:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/Application'
                total:
                    type: integer
                    format: int32
            description: 获取应用列表 - 答复
        ListUserResponse:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/User'
                total:
                    type: integer
                    format: int32
            description: 获取用户列表 - 答复
        LoginRequest:
            type: object
            properties:
                userName:
                    type: string
                password:
                    type: string
            description: 用户后台登陆 - 请求
        LoginResponse:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                userName:
                    type: string
                token:
                    type: string
                refreshToken:
                    type: string
            description: 用户后台登陆 - 回应
        LogoutRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
            description: 用户后台登出 - 请求
        User:
            type: object
            properties:
                id:
                    type: integer
                    description: 用户ID
                    format: uint32
                userName:
                    type: string
                    description: 用户登陆名，使用手机号
                realName:
                    type: string
                    description: 真实姓名
                email:
                    type: string
                    description: 电子邮箱
                avatar:
                    type: string
                    description: 头像
                roleId:
                    type: integer
                    description: 角色ID
                    format: uint32
                creatorId:
                    type: integer
                    description: 创建者ID
                    format: uint32
                authority:
                    enum:
                        - SYS_ADMIN
                        - CUSTOMER_USER
                        - GUEST_USER
                    type: string
                    default: CUSTOMER_USER
                    description: 权限
                description:
                    type: string
                    description: 个人描述
                password:
                    type: string
                    description: 登陆密码
                status:
                    enum:
                        - ON
                        - OFF
                    type: string
                    default: ON
                    description: 用户状态
                createTime:
                    type: string
                    format: date-time
                updateTime:
                    type: string
                    format: date-time
                deleteTime:
                    type: string
                    format: date-time
            description: 用户
    responses:
        default:
            description: default kratos response
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/KratosStatus'
    securitySchemes:
        OAuth2PasswordBearer:
            type: oauth2
            flows:
                password:
                    tokenUrl: /admin/v1/login
                    refreshUrl: /admin/v1/refresh_token
                    scopes: {}
security:
    - OAuth2PasswordBearer: []
tags:
    - name: ApplicationService
      description: 应用服务
    - name: AuthenticationService
      description: 用户后台登陆认证服务
    - name: UserService
      description: 用户管理服务
