syntax = "proto3";

package user.service.v1;


import "gnostic/openapi/v3/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

import "pagination/v1/pagination.proto";

// 变量的命名一律使用小驼峰命名法，例如：firstName、lastName等。

// 用户服务
service UserService {
  // 查询用户列表
  rpc ListUser (pagination.PagingRequest) returns (ListUserResponse) {}

  // 查询用户详情
  rpc GetUser (GetUserRequest) returns (User) {}

  // 创建用户
  rpc CreateUser (CreateUserRequest) returns (User) {}

  // 更新用户
  rpc UpdateUser (UpdateUserRequest) returns (User) {}

  // 删除用户
  rpc DeleteUser (DeleteUserRequest) returns (google.protobuf.Empty) {}

  // 验证密码
  rpc VerifyPassword (VerifyPasswordRequest) returns (VerifyPasswordResponse) {}

  // 用户是否存在
  rpc UserExists (UserExistsRequest) returns (UserExistsResponse) {}

  // 查询用户详情
  rpc GetUserByUserName (GetUserByUserNameRequest) returns (User) {}
}

// 验证密码结果码
enum VerifyPasswordResult {
  SUCCESS = 0;  // 验证成功
  ACCOUNT_NOT_EXISTS = 1; // 账号不存在
  WRONG_PASSWORD = 2;// 密码错误
  FREEZE = 3;// 已冻结
  DELETED = 4;// 已删除
}

// 用户
message User {
  uint32 id = 1 [(gnostic.openapi.v3.property) = { description: "用户ID" }]; // 用户ID

  optional string userName = 2 [(gnostic.openapi.v3.property) = { description: "用户登陆名，使用手机号" }]; // 用户登陆名，使用手机号
  optional string realName = 3 [(gnostic.openapi.v3.property) = { description: "真实姓名" }]; // 真实姓名
  optional string email = 4 [(gnostic.openapi.v3.property) = { description: "电子邮箱" }]; // 电子邮箱
  optional string avatar = 5 [(gnostic.openapi.v3.property) = { description: "头像" }]; // 头像

  optional uint32 roleId = 6 [(gnostic.openapi.v3.property) = { description: "角色ID" }]; // 角色ID
  optional uint32 creatorId = 7 [(gnostic.openapi.v3.property) = { description: "创建者ID" }]; // 创建者ID

  optional string authority = 8 [(gnostic.openapi.v3.property) = {
    description: "权限"
    default: { string: "CUSTOMER_USER" }
    enum: [
      {yaml: "SYS_ADMIN"},
      {yaml: "CUSTOMER_USER"},
      {yaml: "GUEST_USER"}
    ]
  }]; // 权限

  optional string description = 9 [(gnostic.openapi.v3.property) = { description: "个人描述" }]; // 个人描述
  optional string password = 10 [(gnostic.openapi.v3.property) = { description: "登陆密码" }]; // 登陆密码

  optional string status = 11 [(gnostic.openapi.v3.property) = {
    description: "用户状态"
    default: { string: "ON" }
    enum: [{yaml: "ON"}, {yaml: "OFF"}]
  }]; // 用户账号状态


  optional google.protobuf.Timestamp create_time = 30 [json_name = "createTime"];
  optional google.protobuf.Timestamp update_time = 31 [json_name = "updateTime"];
  optional google.protobuf.Timestamp delete_time = 32 [json_name = "deleteTime"];
}

// 获取用户列表 - 答复
message ListUserResponse {
  repeated User items = 1;
  int32 total = 2;
}

// 获取用户数据 - 请求
message GetUserRequest {
  uint32 id = 1;
}

// 创建用户 - 请求
message CreateUserRequest {
  User user = 1;
  uint32 operatorId = 2;
}

// 更新用户 - 请求
message UpdateUserRequest {
  uint32 id = 1;
  User user = 2;
  uint32 operatorId = 3;
}

// 删除用户 - 请求
message DeleteUserRequest {
  uint32 id = 1;
  uint32 operatorId = 2;
}

// 验证密码 - 请求
message VerifyPasswordRequest {
  string userName = 1;
  string password = 2;
}
// 验证密码 - 答复
message VerifyPasswordResponse {
  VerifyPasswordResult result = 1;
}

// 用户是否存在 - 请求
message UserExistsRequest {
  string userName = 1;
}
// 用户是否存在 - 答复
message UserExistsResponse {
  bool exist = 1;
}

message GetUserByUserNameRequest {
  string userName = 1;
}
